{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkokkula/Downloads/iPod-Classic-main/src/components/Navbar.js\";\nimport React from 'react';\nimport \"../css/Navbar.css\";\nimport BatImg from \"../static/battery.png\";\n\n// Renders navbar\nclass Navbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      time: this.getCurrentTime()\n    };\n    this.stateId = \"\";\n  }\n\n  // if there is no notification then iPod logo, time and battery icon\n  // If there is a notification show it for 1 second and clear it\n  componentDidMount() {\n    const {\n      noty\n    } = this.props;\n    if (noty === true) {\n      return;\n    }\n    // set an interval of 60 seconds to update time\n    this.stateId = setInterval(() => {\n      this.setState({\n        time: this.getCurrentTime()\n      });\n    }, 60000);\n  }\n  componentDidUpdate() {\n    const {\n      setNoty,\n      noty\n    } = this.props;\n    if (noty === true) {\n      setTimeout(function () {\n        setNoty();\n      }, 1000);\n    }\n  }\n\n  // Clear the update time interval\n  componentWillUnmount() {\n    const {\n      noty\n    } = this.props;\n    if (noty !== true) clearInterval(this.stateId);\n  }\n\n  // fir getting current time in string\n  getCurrentTime() {\n    const today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    if (today.getMinutes() < 10) {\n      time = today.getHours() + \":0\" + today.getMinutes();\n    }\n    return time;\n  }\n\n  // Render navbar to show either ipod logo, time or Notification\n  render() {\n    const {\n      time\n    } = this.state;\n    const {\n      playing,\n      noty,\n      notifyText\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, \"iPod \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-wifi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 48\n      }\n    })), noty === true && /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }\n    }, notifyText), noty === false && /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }\n    }, time), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-container-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }, playing ? /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"play-pause-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 63\n      }\n    })) : /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"play-pause-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 102\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-pause\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 133\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"battery\",\n      src: BatImg,\n      alt: \"Battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    })));\n  }\n}\nexport default Navbar;","map":{"version":3,"names":["React","BatImg","Navbar","Component","constructor","state","time","getCurrentTime","stateId","componentDidMount","noty","props","setInterval","setState","componentDidUpdate","setNoty","setTimeout","componentWillUnmount","clearInterval","today","Date","getHours","getMinutes","render","playing","notifyText","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt"],"sources":["/Users/shashankkokkula/Downloads/iPod-Classic-main/src/components/Navbar.js"],"sourcesContent":["import React from 'react';\nimport \"../css/Navbar.css\"\nimport BatImg from \"../static/battery.png\"\n\n// Renders navbar\nclass Navbar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            time: this.getCurrentTime(),\n        }\n        this.stateId = \"\";\n    }\n\n    // if there is no notification then iPod logo, time and battery icon\n    // If there is a notification show it for 1 second and clear it\n    componentDidMount() {\n        const { noty} = this.props;\n        if (noty === true) {\n            return;\n        }\n        // set an interval of 60 seconds to update time\n        this.stateId = setInterval(() => {\n            this.setState({ time: this.getCurrentTime() });\n        }, 60000);\n    }\n\n    componentDidUpdate(){\n        const {setNoty, noty } = this.props;\n        if(noty===true){\n            setTimeout(function () {\n                setNoty();\n            },1000)\n        }\n    }\n\n    // Clear the update time interval\n    componentWillUnmount() {\n        const { noty } = this.props;\n        if (noty !== true)\n            clearInterval(this.stateId);\n    }\n\n    // fir getting current time in string\n    getCurrentTime() {\n        const today = new Date();\n        var time = today.getHours() + \":\" + today.getMinutes();\n        if (today.getMinutes() < 10) {\n            time = today.getHours() + \":0\" + today.getMinutes();\n        }\n        return time;\n    }\n\n    // Render navbar to show either ipod logo, time or Notification\n    render() {\n        const { time } = this.state;\n        const { playing, noty , notifyText} = this.props;\n        return (\n            <div className=\"bar\">\n                { <h5 className=\"heading\">iPod <i className=\"fas fa-wifi\"></i></h5>}\n                {noty === true && <h5 className=\"notification\">{notifyText}</h5>}\n                {noty === false && <h3 className=\"time\">{time}</h3>}\n                {<div className=\"right-container-nav\">\n                    {playing ? <h5 className=\"play-pause-nav\"><i className=\"fas fa-play\"></i></h5> : <h5 className=\"play-pause-nav\"><i className=\"fas fa-pause\"></i> </h5>}\n                    <img className=\"battery\" src={BatImg} alt=\"Battery\" />\n                </div>}\n            </div>\n        )\n    }\n}\n\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}